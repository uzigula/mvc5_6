//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prueba.Performance
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    [DeploymentItem("multi_acdc2.jpg")]
    public class TiendaMusicaEditarAlbum : WebTest
    {

        public TiendaMusicaEditarAlbum()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Inicializar reglas de validación aplicables a todas las solicitudes de prueba web
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest("http://localhost:1703/admin/AC-DC/Let%20There%20Be%20Rock/editar");
            request1.ThinkTime = 3;
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request1.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest("http://localhost:2156/66059c9b0a944136b14e9347b6d25241/browserLinkSignalR/negotia" +
                    "te");
            request2.Method = "POST";
            request2.Headers.Add(new WebTestRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8"));
            request2.Headers.Add(new WebTestRequestHeader("Accept", "text/plain, */*; q=0.01"));
            request2.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:1703/admin/AC-DC/Let%20There%20Be%20Rock/editar"));
            request2.QueryStringParameters.Add("requestUrl", "http%3A%2F%2Flocalhost%3A1703%2Fadmin%2FAC-DC%2FLet%2520There%2520Be%2520Rock%2Fe" +
                    "ditar", false, false);
            request2.QueryStringParameters.Add("browserName", "Internet+Explorer", false, false);
            request2.QueryStringParameters.Add("userAgent", "Mozilla%2F5.0+(Windows+NT+6.3%3B+WOW64%3B+Trident%2F7.0%3B+.NET4.0E%3B+.NET4.0C%3" +
                    "B+.NET+CLR+3.5.30729%3B+.NET+CLR+2.0.50727%3B+.NET+CLR+3.0.30729%3B+rv%3A11.0)+l" +
                    "ike+Gecko", false, false);
            request2.QueryStringParameters.Add("clientProtocol", "1.3", false, false);
            request2.QueryStringParameters.Add("_", "1466284061657", false, false);
            FormPostHttpBody request2Body = new FormPostHttpBody();
            request2.Body = request2Body;
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest("http://localhost:2156/66059c9b0a944136b14e9347b6d25241/browserLinkSignalR/connect" +
                    "");
            request3.QueryStringParameters.Add("transport", "webSockets", false, false);
            request3.QueryStringParameters.Add("connectionToken", @"AQAAANCMnd8BFdERjHoAwE%2FCl%2BsBAAAAdWERdXR9qEiTyCY%2FbCDY7QAAAAACAAAAAAAQZgAAAAEAACAAAAAbiAI3b5xajd%2F70XHT2wXZo%2BAO0f3WNiUbp2GeOiXZbQAAAAAOgAAAAAIAACAAAAADrAWHlew0f6cKNBAIxWh%2BLIE5aOyKI%2B%2BU3DsV1a4ZKjAAAADXyduGRc2BWoGrmg6lj69OFEA7PoCbUMjxpMR2F934Ct%2BW%2FQQVlRUCiJN1nRqEhxlAAAAAKPb3IlfAwwioR38hSkZoHpnk0Wh5Rs3hYLtPKU9BfhCvJP0ZySD5U8fuoVOlmjbnnlLmlv0Rdb09uGV6mqlKlw%3D%3D", false, false);
            request3.QueryStringParameters.Add("requestUrl", "http%3A%2F%2Flocalhost%3A1703%2Fadmin%2FAC-DC%2FLet%2520There%2520Be%2520Rock%2Fe" +
                    "ditar", false, false);
            request3.QueryStringParameters.Add("browserName", "Internet+Explorer", false, false);
            request3.QueryStringParameters.Add("userAgent", "Mozilla%2F5.0+(Windows+NT+6.3%3B+WOW64%3B+Trident%2F7.0%3B+.NET4.0E%3B+.NET4.0C%3" +
                    "B+.NET+CLR+3.5.30729%3B+.NET+CLR+2.0.50727%3B+.NET+CLR+3.0.30729%3B+rv%3A11.0)+l" +
                    "ike+Gecko", false, false);
            request3.QueryStringParameters.Add("tid", "10", false, false);
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest("http://localhost:1703/__browserLink/requestData/a6ddf528b20144b39ffa3e0be61032fb");
            request4.ThinkTime = 5;
            request4.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request4.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request4.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:1703/admin/AC-DC/Let%20There%20Be%20Rock/editar"));
            request4.QueryStringParameters.Add("version", "2", false, false);
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest("http://localhost:1703/admin/AC-DC/Let%20There%20Be%20Rock/Editar");
            request5.Method = "POST";
            request5.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:1703/admin/AC-DC/Let%20There%20Be%20Rock/editar"));
            FormPostHttpBody request5Body = new FormPostHttpBody();
            request5Body.FormPostParameters.Add("__RequestVerificationToken", this.Context["$HIDDEN1.__RequestVerificationToken"].ToString());
            request5Body.FormPostParameters.Add("AlbumId", this.Context["$HIDDEN1.AlbumId"].ToString());
            request5Body.FormPostParameters.Add("Caratula", this.Context["$HIDDEN1.Caratula"].ToString());
            request5Body.FormPostParameters.Add(new FileUploadParameter("image", "multi_acdc2.jpg", "image/jpeg", true));
            request5Body.FormPostParameters.Add("Titulo", "Let There Be Rock");
            request5.Body = request5Body;
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest("http://localhost:1703/");
            request6.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:1703/admin/AC-DC/Let%20There%20Be%20Rock/editar"));
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest("http://localhost:2156/66059c9b0a944136b14e9347b6d25241/browserLinkSignalR/abort");
            request7.Method = "POST";
            request7.Headers.Add(new WebTestRequestHeader("Accept", "text/plain, */*; q=0.01"));
            request7.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:1703/admin/AC-DC/Let%20There%20Be%20Rock/editar"));
            request7.QueryStringParameters.Add("transport", "webSockets", false, false);
            request7.QueryStringParameters.Add("connectionToken", @"AQAAANCMnd8BFdERjHoAwE%2FCl%2BsBAAAAdWERdXR9qEiTyCY%2FbCDY7QAAAAACAAAAAAAQZgAAAAEAACAAAAAbiAI3b5xajd%2F70XHT2wXZo%2BAO0f3WNiUbp2GeOiXZbQAAAAAOgAAAAAIAACAAAAADrAWHlew0f6cKNBAIxWh%2BLIE5aOyKI%2B%2BU3DsV1a4ZKjAAAADXyduGRc2BWoGrmg6lj69OFEA7PoCbUMjxpMR2F934Ct%2BW%2FQQVlRUCiJN1nRqEhxlAAAAAKPb3IlfAwwioR38hSkZoHpnk0Wh5Rs3hYLtPKU9BfhCvJP0ZySD5U8fuoVOlmjbnnlLmlv0Rdb09uGV6mqlKlw%3D%3D", false, false);
            request7.QueryStringParameters.Add("requestUrl", "http%3A%2F%2Flocalhost%3A1703%2Fadmin%2FAC-DC%2FLet%2520There%2520Be%2520Rock%2Fe" +
                    "ditar", false, false);
            request7.QueryStringParameters.Add("browserName", "Internet+Explorer", false, false);
            request7.QueryStringParameters.Add("userAgent", "Mozilla%2F5.0+(Windows+NT+6.3%3B+WOW64%3B+Trident%2F7.0%3B+.NET4.0E%3B+.NET4.0C%3" +
                    "B+.NET+CLR+3.5.30729%3B+.NET+CLR+2.0.50727%3B+.NET+CLR+3.0.30729%3B+rv%3A11.0)+l" +
                    "ike+Gecko", false, false);
            FormPostHttpBody request7Body = new FormPostHttpBody();
            request7.Body = request7Body;
            yield return request7;
            request7 = null;

            WebTestRequest request8 = new WebTestRequest("http://localhost:2156/66059c9b0a944136b14e9347b6d25241/browserLinkSignalR/negotia" +
                    "te");
            request8.Method = "POST";
            request8.Headers.Add(new WebTestRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8"));
            request8.Headers.Add(new WebTestRequestHeader("Accept", "text/plain, */*; q=0.01"));
            request8.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:1703/"));
            request8.QueryStringParameters.Add("requestUrl", "http%3A%2F%2Flocalhost%3A1703%2F", false, false);
            request8.QueryStringParameters.Add("browserName", "Internet+Explorer", false, false);
            request8.QueryStringParameters.Add("userAgent", "Mozilla%2F5.0+(Windows+NT+6.3%3B+WOW64%3B+Trident%2F7.0%3B+.NET4.0E%3B+.NET4.0C%3" +
                    "B+.NET+CLR+3.5.30729%3B+.NET+CLR+2.0.50727%3B+.NET+CLR+3.0.30729%3B+rv%3A11.0)+l" +
                    "ike+Gecko", false, false);
            request8.QueryStringParameters.Add("clientProtocol", "1.3", false, false);
            request8.QueryStringParameters.Add("_", "1466284084612", false, false);
            FormPostHttpBody request8Body = new FormPostHttpBody();
            request8.Body = request8Body;
            yield return request8;
            request8 = null;
        }
    }
}
