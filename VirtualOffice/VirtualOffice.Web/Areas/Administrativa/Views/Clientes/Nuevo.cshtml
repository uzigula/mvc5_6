@model VirtualOffice.Web.Areas.Administrativa.Models.GrabaClienteViewModel

@{
    ViewBag.Title = "Nuevo";
}

<h2>Nuevo</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>GrabaClienteViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentoIdentidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocumentoIdentidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocumentoIdentidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
            </div>
        </div>


        <div id="cliente-ubigeo-dropdown-area">
            <div class="form-group">
                @Html.LabelFor(model => model.Departamentos, new { @class = "control-label col-md-2" })
                <div class="col-md-10 form-inline">
                    @Html.HiddenFor(model => model.DireccionCiudad, 
                    new { id = "department-name", @class = "department" })
                    @Html.DropDownList("department", Model.Departamentos, 
                    new { id = "client-department", @class = "form-control department" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Provincias, new { @class = "control-label col-md-2" })
                <div class="col-md-10 form-inline">
                    @Html.HiddenFor(model => model.DireccionProvincia, new { id = "province-name", @class = "province" })
                    @Html.DropDownList("province", Model.Provincias, new { id = "client-province", @class = "form-control province" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Distritos, new { @class = "control-label col-md-2" })
                <div class="col-md-10 form-inline">
                    @Html.HiddenFor(model => model.DireccionDistrito, new { id = "district-name", @class = "district" })
                    @Html.DropDownList("district", Model.Distritos, new { id = "client-distric", @class = "form-control district" })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.DireccionCalle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DireccionCalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DireccionCalle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/cliente")
}
